make: *** Warning: File `src/datalink.c' has modification time in the future (1041552222 > 1002580444)
cc  -c -O2 -I./include/ -oobjects/datalink.o ./src/datalink.c	
In file included from src/../include/datalink.h:15,
                 from ./src/datalink.c:3:
src/../include/../libpcap/pcap.h:42: net/bpf.h: No such file or directory
In file included from src/../include/datalink.h:16,
                 from ./src/datalink.c:3:
src/../include/../libpcap/pcap-int.h:39: pcap.h: No such file or directory
In file included from ./src/datalink.c:3:
src/../include/datalink.h:37: net/if_dl.h: No such file or directory
make: *** [objects/datalink.o] Error 1
-------------------------------------------
solution: fix pcap.h to include right path to pbpf.h
linux does not need if_dl.h
something is wrong
--------------------------------------------
change in pcap.h #include "net/bpf.h"
change datalink.h //#ifdef HAVE_CONFIG_H
#include "../config.h"
//#endif

cc  -c -O2 -I./include/ -oobjects/datalink.o ./src/datalink.c
In file included from src/../include/datalink.h:16,
                 from ./src/datalink.c:3:
src/../include/../libpcap/pcap-int.h:39: pcap.h: No such file or directory
make: *** [objects/datalink.o] Error 1
--------------------solution-----------------
pcap-int.h change
#include <pcap.h> to pc#include "pcap.h"
./src/datalink.c: In function `get_if_list':
./src/datalink.c:85: parse error before `)'
make: *** [objects/datalink.o] Error 1
------------solution------------
skip the *  pdl = realloc(pdl,ndl);
gcc -O2 -I.  -Ilinux-include -DHAVE_MALLOC_H=1 -DHAVE_SYS_IOCCOM_H=1 -DHAVE_SYS_SOCKIO_H=1 -DHAVE_ETHER_HOSTTON=1 -DHAVE_STRERROR=1 -DHAVE_NET_IF_ARP_H=1 -DHAVE_SOCKADDR_SA_LEN=1  -c ./inet.c
./inet.c:44: sys/sockio.h: No such file or directory
make[1]: *** [inet.o] Error 1
make[1]: Leaving directory `/c/xeth/libpcap'
make: *** [lib/libpcap.a] Error 2
----------------------solution
manually set -DHAVE_SYS_SOCKIO=1 or #undef HAVEHAVE_SYS_SOCKIO
libpcap/inet.c #undef HAVE_SYS_SOCKIO_H


gcc -O2 -I.  -Ilinux-include -DHAVE_MALLOC_H=1 -DHAVE_SYS_IOCCOM_H=1 -DHAVE_SYS_SOCKIO_H=1 -DHAVE_ETHER_HOSTTON=1 -DHAVE_STRERROR=1 -DHAVE_NET_IF_ARP_H=1 -DHAVE_SOCKADDR_SA_LEN=1  -c ./inet.c
./inet.c: In function `pcap_lookupdev':
./inet.c:118: structure has no member named `sa_len'
make[1]: *** [inet.o] Error 1
make[1]: Leaving directory `/c/xeth/libpcap'
make: *** [lib/libpcap.a] Error 2
------------solution
u#undef HAVE_SOCKADDR_SA_LEN in inet.c

                   return NULL;
                        }
                        recv->pkthdr = malloc(sizeof(pkthdr));
                
                        memcpy(recv->pkthdr,&pkthdr,sizeof(pkthdr));
                
                        *nrecv = len;
                
                
                return recv;
                case DLT_SLIP_BSDOS
you need to return recv in DLT_RAW switch
---------------------------------------------------------------------------------------------------
change datalink depended functions such as creatreSocket,TCPSend,UDPSend,etc
datalink indepenndence from DLT_EN10MB is needed
also add support for PPP,ETHERNET IEEE802.5,PPPoE , etc datalink protocols
also add support for DNS,SNMP,and NetBIOS
support for Application layer protocols
need to change application layer functions that take MAC addresses to take null argument?
or should you consider a level of encaptusalation within abstract functions using a 
struct that contains datalink,net,app info , so the user doesnt have to know all the defaults
.
USE RAW SOCKET IF DLT_RAW!!!
done

line 85
                ndl++;
                pdl = realloc(pdl,ndl*sizeof(struct datalink));
int pcap.c:pcap_close         if(p->linktype == DLT_RAW)
                close(p->rfd);
All application layer functions should demultiplex data link type befrore sending data
or use abstract data type to hold data
create and update the up examples
read libnets headers/src and add more protocol supports
test NetBSD ppp link!
#0  0x804a4f3 in ARPRequest ()
(gdb) where
#0  0x804a4f3 in ARPRequest ()
#1  0x8049325 in main ()
#2  0x8049011 in ___start ()
fixed
        if( m == NULL || len < 0)                        
                return NULL;
        if( len ==  0)
                len = sizeof(struct ether_arp) )
------ok
need recvi functions for all protocols!
add RARP support (easy)

found another error:
xtcp.c line 269 in TCPSend was sending *m instead of head


recvlayers returns not NULL even if n == 0?
appsprint needs to add \r\n
---ok
get_if_list now supports unicode WinNT

		PacketGetAdapterNames((char *)AdapterName,&AdapterLength);
		p=AdapterName;
		while(*p && p[1]){			
			for(k=0;*p && k<=(int)AdapterLength;p++,k++){
				rawAdapterList[j][k]=((char*)p)[0];
				printf("%c",((char*)p)[0]);
			}
			rawAdapterList[j][++k]=0;
			p++; j++;
		}


		rawNumAdapters = j;		


